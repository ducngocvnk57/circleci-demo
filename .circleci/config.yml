version: 2
jobs:
  test:
    docker:
      - image: ngocnd0607/circleci-build
        environment:
          DB_DRIVER: mysql
          DB_DNS: "root:root@tcp(localhost:3306)/circleci-demo?charset=utf8&parseTime=True&loc=Local"
      - image: circleci/mysql:5.7
        environment:
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: circleci-demo
    working_directory: /go/src/github.com/ducngocvnk57/circleci-demo
    steps:
      - checkout
      - run: glide up
      - run:
          name: Waiting for mysql to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for mysql && exit 1
      - run: goose -dir migrations $DB_DRIVER $DB_DNS up
      - run: go test -cover -v -timeout 300s ./...
  deploy-prod:
    docker:
      - image: ngocnd0607/circleci-build
    working_directory: /go/src/github.com/ducngocvnk57/circleci-demo
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Install dependent
          command: |
            glide up
            npm install 
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build and push Docker image
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build -t $DOCKER_REPOSITORY:$TAG .
            ~/.local/bin/aws ecr get-login --region $AWS_DEFAULT_REGION | bash
            docker push $DOCKER_REPOSITORY:$TAG
            gulp build --url=$DOCKER_REPOSITORY:$TAG
      - run:
          name: Deploy to eb
          command: |
            cd eb-deploy
            ~/.local/bin/eb init
            ~/.local/bin/eb deploy ci-production-env
  deploy-stage:
    docker:
      - image: ngocnd0607/circleci-build
    working_directory: /go/src/github.com/ducngocvnk57/circleci-demo
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Install dependent
          command: |
            glide up
            npm install 
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build and push Docker image
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build -t $DOCKER_REPOSITORY:$TAG .
            ~/.local/bin/aws ecr get-login --region $AWS_DEFAULT_REGION | bash
            docker push $DOCKER_REPOSITORY:$TAG
            gulp build --url=$DOCKER_REPOSITORY:$TAG
      - run:
          name: Deploy to eb
          command: |
            cd eb-deploy
            ~/.local/bin/eb init
            ~/.local/bin/eb deploy ci-stage-env
workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - deploy-stage:
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy-prod:
          requires:
            - test
          filters:
            branches:
              only: master  